@using web.Shared
@inject HttpClient HttpClient

<div class="card">
    <div class="card-header">
        Add an earning
    </div>
    <div class="card-body">
        <EditForm Model="@earning" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="dateInput">Date</label>
                <InputDate class="form-control" id="dateInput" @bind-Value="earning.Date"></InputDate>
            </div>

            <div class="form-group">
                <label for="subjectInput">Subject</label>
                <InputText class="form-control" id="subjectInput" @bind-Value="earning.Subject"></InputText>
            </div>

            <div class="form-group">
                <label for="categoryInput">Category</label>
                <InputSelect class="form-control" id="categoryInput" @bind-Value="earning.Category">
                    @{
                        foreach (var category in Enum.GetValues(typeof(EarningCategory)))
                        {
                            <option value="@category">@category</option>
                        }
                    }
                </InputSelect>
            </div>

            <div class="form-group">
                <label for="amountInput">Amount</label>
                <InputNumber class="form-control" id="amountInput" @bind-Value="earning.Amount"></InputNumber>
            </div>

            <div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </EditForm>
        <div>@success</div>
    </div>
</div>
@code {
    [Parameter] public EventCallback<EarningModel> OnSubmitHandler { get; set; }
    private EarningModel earning = new EarningModel { Date = DateTime.Today };
    private string success = "";

    public void HandleValidSubmit()
    {
        HttpClient.PostAsJsonAsync("api/earnings", earning);
        OnSubmitHandler.InvokeAsync(earning);
    }
}
